import java.util.Scanner;
import java.io.*;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;

/*********************** Employee List Management ***********************/

class Employee_List {
    private List<String> employeeIDs;

    public Employee_List() {
        employeeIDs = new ArrayList<>();
    }

    public void addEmployeeID(String id) {
        employeeIDs.add(id);
    }

    public void removeEmployeeID(String id) {
        employeeIDs.remove(id);
    }

    public void displayAllEmployees() {
        System.out.println("\nEmployee IDs:");
        for (String id : employeeIDs) {
            System.out.println(id);
        }
    }
}

/*********************** Employee Search ***********************/

class Employee_Search {
    public void searchEmployee(String id) {
        File file = new File("file" + id + ".txt");
        if (file.exists()) {
            System.out.println("Employee found:");
            try (Scanner sc = new Scanner(file)) {
                while (sc.hasNextLine()) {
                    System.out.println(sc.nextLine());
                }
            } catch (Exception e) {
                System.out.println("Error reading employee details.");
            }
        } else {
            System.out.println("Employee not found.");
        }
    }
}

/*********************** Employee Salary Management ***********************/

class Employee_Salary_Management {
    private Map<String, Double> employeeSalaries;

    public Employee_Salary_Management() {
        employeeSalaries = new HashMap<>();
    }

    public void updateSalary(String id, double newSalary) {
        employeeSalaries.put(id, newSalary);
        System.out.println("Updated salary for Employee ID " + id + " to " + newSalary);
    }

    public void displayAllSalaries() {
        System.out.println("\nEmployee Salaries:");
        for (Map.Entry<String, Double> entry : employeeSalaries.entrySet()) {
            System.out.println("Employee ID: " + entry.getKey() + " - Salary: " + entry.getValue());
        }
    }
}

/*********************** Employee Report ***********************/

class Employee_Report {
    public void generateEmployeeReport() {
        System.out.println("\nEmployee Report:");
        File folder = new File(".");
        File[] listOfFiles = folder.listFiles();

        for (File file : listOfFiles) {
            if (file.isFile() && file.getName().startsWith("file")) {
                try (Scanner sc = new Scanner(file)) {
                    while (sc.hasNextLine()) {
                        System.out.println(sc.nextLine());
                    }
                    System.out.println("----------------------------");
                } catch (Exception e) {
                    System.out.println("Error reading employee details.");
                }
            }
        }
    }
}

/*********************** Employee Add ***********************/

class Employee_Add {
    public void createFile() {
        Scanner sc = new Scanner(System.in);

        EmployDetail emp = new EmployDetail();
        emp.getInfo();
        try {
            File f1 = new File("file" + emp.employ_id + ".txt");
            if (f1.createNewFile()) {
                FileWriter myWriter = new FileWriter("file" + emp.employ_id + ".txt");
                myWriter.write("Employee ID:" + emp.employ_id + "\n" + "Employee Name     :" + emp.name + "\n" +
                        "Father's Name     :" + emp.father_name + "\n" + "Employee Contact  :" + emp.employ_contact + "\n" +
                        "Email Information :" + emp.email + "\n" + "Employee position :" + emp.position + "\n" +
                        "Employee Salary   :" + emp.employ_salary);
                myWriter.close();
                System.out.println("\nEmployee has been Added :)\n");

                System.out.print("\nPress Enter to Continue...");
                sc.nextLine();
            } else {
                System.out.println("\nEmployee already exists :(");
                System.out.print("\nPress Enter to Continue...");
                sc.nextLine();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}

/*********************** Employee Details ***********************/

class EmployDetail {
    String name;
    String father_name;
    String email;
    String position;
    String employ_id;
    String employ_salary;
    String employ_contact;

    public void getInfo() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Employee's name --------: ");
        name = sc.nextLine();
        System.out.print("Enter Employee's Father name -: ");
        father_name = sc.nextLine();
        System.out.print("Enter Employee's ID ----------: ");
        employ_id = sc.nextLine();
        System.out.print("Enter Employee's Email ID ----: ");
        email = sc.nextLine();
        System.out.print("Enter Employee's Position ----: ");
        position = sc.nextLine();
        System.out.print("Enter Employee contact Info --: ");
        employ_contact = sc.nextLine();
        System.out.print("Enter Employee's Salary ------: ");
        employ_salary = sc.nextLine();
    }
}

/*********************** Employee Remove ***********************/

class Employee_Remove {
    public void removeFile(String ID) {

        File file = new File("file" + ID + ".txt");
        if (file.exists()) {
            if (file.delete()) {
                System.out.println("\nEmployee has been removed Successfully");
            }
        } else {
            System.out.println("\nEmployee does not exists :( ");
        }
    }
}

/*********************** Employee Update ***********************/

class Employee_Update {
    public void updateFile(String s, String o, String n) throws IOException {
        File file = new File("file" + s + ".txt");
        Scanner sc = new Scanner(file);
        String fileContext = "";
        while (sc.hasNextLine()) {
            fileContext = fileContext + "\n" + sc.nextLine();
        }
        FileWriter myWriter = new FileWriter("file" + s + ".txt");
        fileContext = fileContext.replaceAll(o, n);
        myWriter.write(fileContext);
        myWriter.close();
    }
}

/*********************** Exit Code ***********************/

class CodeExit {
    public void out() {
        System.out.println("\n*****************************************");
        System.out.println("$ cat Thank You For Using my Software :) ");
        System.out.println("*****************************************");
        System.out.println("\t\t/~ <0d3d by Abhinav Dubey\n");
        System.exit(0);
    }
}

/*********************** MainMenu ***********************/

class MainMenu {
    public void menu() {
        System.out.println("\t\t*******************************************");
        System.out.println("\t\t\t  EMPLOYEE MANAGEMENT SYSTEM");
        System.out.println("\t\t*******************************************");
        System.out.println("\t\t\t    --------------------");
        System.out.println("\t\t\t     ~$ Abhinav Dubey");
        System.out.println("\t\t\t    --------------------");
        System.out.println("\n\nPress 1 : To Add an Employee Details");
        System.out.println("Press 2 : To See an Employee Details ");
        System.out.println("Press 3 : To Remove an Employee");
        System.out.println("Press 4 : To Update Employee Details");
        System.out.println("Press 5 : To Exit the EMS Portal");
        System.out.println("Press 6 : To add city_name");
        System.out.println("Press 7 : To add Town_name");
    }
}

/*********************** Main Class ***********************/

public class EmployManagementSystem {
    public static void main(String[] args) {
        // Clear the output Screen
        System.out.print("\033[H\033[2J");

        Scanner sc = new Scanner(System.in);
        Employee_Show epv = new Employee_Show();
        Employee_List employeeList = new Employee_List();
        Employee_Search employeeSearch = new Employee_Search();
        Employee_Salary_Management salaryManagement = new Employee_Salary_Management();
        Employee_Report employeeReport = new Employee_Report();

        int choice = 0;

        // Calling MainMenu Class function
        MainMenu mainMenu = new MainMenu();
        mainMenu.menu();

        // Initializing loop for Menu Choices
        while (choice != 5) {
            System.out.print("\nPlease Enter choice: ");
            choice = Integer.parseInt(sc.nextLine());

            // Switch Case Statements
            switch (choice) {
                case 1:
                    // Creating class's object and calling Function using that object
                    Employee_Add ep = new Employee_Add();
                    ep.createFile();
                    mainMenu.menu();
                    break;
                case 2:
                    System.out.print("\nPlease Enter Employee's ID: ");
                    String employeeId = sc.nextLine();
                    try {
                        epv.viewFile(employeeId);
                    } catch (Exception e) {
                        System.out.println("Error: " + e.getMessage());
                    }
                    System.out.print("\nPress Enter to Continue...");
                    sc.nextLine();
                    mainMenu.menu();
                    break;
                case 3:
                    System.out.print("\nPlease Enter Employee's ID: ");
                    String empIdToRemove = sc.nextLine();
                    Employee_Remove epr = new Employee_Remove();
                    epr.removeFile(empIdToRemove);
                    System.out.print("\nPress Enter to Continue...");
                    sc.nextLine();
                    mainMenu.menu();
                    break;
                case 4:
                    System.out.print("\nPlease Enter Employee's ID: ");
                    String empIdToUpdate = sc.nextLine();
                    try {
                        epv.viewFile(empIdToUpdate);
                    } catch (Exception e) {
                        System.out.println("Error: " + e.getMessage());
                    }
                    Employee_Update epu = new Employee_Update();
                    System.out.print("Please Enter the detail you want to Update: ");
                    System.out.print("\nFor Example:\n");
                    System.out.println("If you want to Change the Name, then Enter Current Name and Press Enter. Then write the new Name then Press Enter.
